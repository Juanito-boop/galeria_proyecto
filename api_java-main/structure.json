{
  "src": {
    "main": {
      "java": {
        "com": {
          "usta": {
            "gallery": {
              "controllers": {
                "CategoriaController.java": "package com.usta.gallery.controllers;\r\n\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PatchMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Categorias;\r\nimport com.usta.gallery.repository.CategoriaRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/categorias\")\r\npublic class CategoriaController {\r\n\r\n  @Autowired\r\n  private CategoriaRepository categoriaRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Categorias>> getAllCategorias() {\r\n    return ResponseEntity.ok(categoriaRepository.findAll());\r\n  }\r\n\r\n  @GetMapping(\"/{id}\")\r\n  public ResponseEntity<Categorias> getCategoriaById(@PathVariable Long id) {\r\n    Optional<Categorias> categoria = categoriaRepository.findById(id);\r\n    return categoria.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @PostMapping\r\n  public ResponseEntity<Categorias> createCategoria(@RequestBody Categorias categoria) {\r\n    Categorias newCategoria = categoriaRepository.save(categoria);\r\n    return ResponseEntity.status(HttpStatus.CREATED).body(newCategoria);\r\n  }\r\n\r\n  @PatchMapping(\"/{id}\")\r\n  public ResponseEntity<Categorias> updateCategoria(@PathVariable Long id, @RequestBody Categorias updatedCategoria) {\r\n    return categoriaRepository.findById(id)\r\n        .map(categoria -> {\r\n          if (updatedCategoria.getCategoria() != null) {\r\n            categoria.setCategoria(updatedCategoria.getCategoria());\r\n          }\r\n          Categorias savedCategoria = categoriaRepository.save(categoria);\r\n          return ResponseEntity.ok(savedCategoria);\r\n        })\r\n        .orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @DeleteMapping(\"/{id}\")\r\n  public ResponseEntity<Void> deleteCategoria(@PathVariable Long id) {\r\n    if (categoriaRepository.existsById(id)) {\r\n      categoriaRepository.deleteById(id);\r\n      return ResponseEntity.noContent().build();\r\n    }\r\n    return ResponseEntity.notFound().build();\r\n  }\r\n\r\n}\r\n",
                "ExposicionController.java": "package com.usta.gallery.controllers;\r\n\r\nimport java.util.Collections;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Exposiciones;\r\nimport com.usta.gallery.repository.ExposicionRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/exposiciones\")\r\npublic class ExposicionController {\r\n  \r\n  @Autowired\r\n  private ExposicionRepository exposicionRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Exposiciones>> getAllExposiciones() {\r\n    return ResponseEntity.ok(exposicionRepository.findAll());\r\n  }\r\n\r\n  @GetMapping(\"/{id}\")\r\n  public ResponseEntity<Exposiciones> getExposicionById(@PathVariable Long id) {\r\n    Optional<Exposiciones> exposicion = exposicionRepository.findById(id);\r\n    return exposicion.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @GetMapping(\"/categorias/{id}\")\r\n  public ResponseEntity<Iterable<Exposiciones>> getExposicionesByCategoriaId(@PathVariable Long id) {\r\n    return ResponseEntity.ok(exposicionRepository.findAllById(Collections.singletonList(id)));\r\n  }\r\n}\r\n",
                "ObraController.java": "package com.usta.gallery.controllers;\r\n\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Obras;\r\nimport com.usta.gallery.repository.ObraRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/obras\")\r\npublic class ObraController {\r\n  \r\n  @Autowired\r\n  private ObraRepository obraRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Obras>> getAllObras() {\r\n    return ResponseEntity.ok(obraRepository.findAll());\r\n  }\r\n\r\n  @GetMapping(\"/{id}\")\r\n  public ResponseEntity<Obras> getObraById(@PathVariable Long id) {\r\n    Optional<Obras> obra = obraRepository.findById(id);\r\n    return obra.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @PostMapping\r\n  public ResponseEntity<Obras> createObra(@RequestBody Obras obra) {\r\n    Obras newObra = obraRepository.save(obra);\r\n    return ResponseEntity.ok(newObra);\r\n  }\r\n}\r\n",
                "ObraExposicionController.java": "package com.usta.gallery.controllers;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.ObrasExposiciones;\r\nimport com.usta.gallery.repository.ObraExposicionRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/obrasExposiciones\")\r\npublic class ObraExposicionController {\r\n  \r\n  @Autowired\r\n  private ObraExposicionRepository obraExposicionRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<ObrasExposiciones>> getAllObrasExposiciones() {\r\n    return ResponseEntity.ok(obraExposicionRepository.findAll());\r\n  }\r\n}\r\n",
                "RolController.java": "package com.usta.gallery.controllers;\r\n\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PatchMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Roles;\r\nimport com.usta.gallery.repository.RolRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/roles\")\r\npublic class RolController {\r\n\r\n  @Autowired\r\n  private RolRepository rolRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Roles>> getAllRoles() {\r\n    return ResponseEntity.ok(rolRepository.findAll());\r\n  }\r\n\r\n  @GetMapping(\"/{id}\")\r\n  public ResponseEntity<Roles> getRolById(@PathVariable Long id) {\r\n    Optional<Roles> rol = rolRepository.findById(id);\r\n    return rol.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @PostMapping\r\n  public ResponseEntity<Roles> createRol(@RequestBody Roles rol) {\r\n    Roles newRol = rolRepository.save(rol);\r\n    return ResponseEntity.status(HttpStatus.CREATED).body(newRol);\r\n  }\r\n\r\n  @PatchMapping(\"/{id}\")\r\n  public ResponseEntity<Roles> updateRol(@PathVariable Long id, @RequestBody Roles updatedRol) {\r\n    return rolRepository.findById(id)\r\n        .map(rol -> {\r\n          if (updatedRol.getRol() != null) {\r\n            rol.setRol(updatedRol.getRol());\r\n          }\r\n          Roles savedRol = rolRepository.save(rol);\r\n          return ResponseEntity.ok(savedRol);\r\n        })\r\n        .orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @DeleteMapping(\"/{id}\")\r\n  public ResponseEntity<Void> deleteRol(@PathVariable Long id) {\r\n    if (rolRepository.existsById(id)) {\r\n      rolRepository.deleteById(id);\r\n      return ResponseEntity.noContent().build();\r\n    }\r\n    return ResponseEntity.notFound().build();\r\n  }\r\n}\r\n",
                "TecnicaController.java": "package com.usta.gallery.controllers;\r\n\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PatchMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Tecnicas;\r\nimport com.usta.gallery.repository.TecnicaRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/tecnicas\")\r\npublic class TecnicaController {\r\n\r\n  @Autowired\r\n  private TecnicaRepository tecnicaRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Tecnicas>> getAllTecnicas() {\r\n    return ResponseEntity.ok(tecnicaRepository.findAll());\r\n  }\r\n\r\n  @GetMapping(\"/{id}\")\r\n  public ResponseEntity<Tecnicas> getTecnicaById(@PathVariable Long id) {\r\n    Optional<Tecnicas> tecnica = tecnicaRepository.findById(id);\r\n    return tecnica.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @PostMapping\r\n  public ResponseEntity<Tecnicas> createTecnica(@RequestBody Tecnicas tecnica) {\r\n    Tecnicas newTecnica = tecnicaRepository.save(tecnica);\r\n    return ResponseEntity.status(HttpStatus.CREATED).body(newTecnica);\r\n  }\r\n\r\n  @PatchMapping(\"/{id}\")\r\n  public ResponseEntity<Tecnicas> updateTecnica(@PathVariable Long id, @RequestBody Tecnicas updatedTecnica) {\r\n    return tecnicaRepository.findById(id)\r\n        .map(tecnica -> {\r\n          if (updatedTecnica.getTecnica() != null) {\r\n            tecnica.setTecnica(updatedTecnica.getTecnica());\r\n          }\r\n          Tecnicas savedTecnica = tecnicaRepository.save(tecnica);\r\n          return ResponseEntity.ok(savedTecnica);\r\n        })\r\n        .orElseGet(() -> ResponseEntity.notFound().build());\r\n  }\r\n\r\n  @DeleteMapping(\"/{id}\")\r\n  public ResponseEntity<Void> deleteTecnica(@PathVariable Long id) {\r\n    if (tecnicaRepository.existsById(id)) {\r\n      tecnicaRepository.deleteById(id);\r\n      return ResponseEntity.noContent().build();\r\n    }\r\n    return ResponseEntity.notFound().build();\r\n  }\r\n\r\n}\r\n",
                "UsuarioController.java": "package com.usta.gallery.controllers;\r\n\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.usta.gallery.entities.Usuarios;\r\nimport com.usta.gallery.repository.UsuarioRepository;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/usuarios\")\r\npublic class UsuarioController {\r\n\r\n  @Autowired\r\n  private UsuarioRepository usuarioRepository;\r\n\r\n  @GetMapping\r\n  public ResponseEntity<Iterable<Usuarios>> getAllUsuarios() {\r\n    return ResponseEntity.ok(usuarioRepository.findAll());\r\n  }\r\n}\r\n"
              },
              "entities": {
                "Categorias.java": "package com.usta.gallery.entities;\r\n\r\nimport java.util.LinkedHashSet;\r\nimport java.util.Set;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.OneToMany;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"categorias\")\r\npublic class Categorias {\r\n\t@Id\t\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_categoria\", nullable = false)\r\n\tprivate Long id;\r\n\t\r\n\t@Column(name = \"categoria\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String categoria;\r\n\t\r\n\t@OneToMany(mappedBy = \"idCategoria\")\r\n\tprivate Set<Exposiciones> exposiciones = new LinkedHashSet<>();\r\n\t\r\n}",
                "Exposiciones.java": "package com.usta.gallery.entities;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"exposiciones\")\r\npublic class Exposiciones {\r\n\t@Id\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_exposicion\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@Column(name = \"titulo\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String titulo;\r\n\r\n\t@Column(name = \"descripcion\", length = Integer.MAX_VALUE)\r\n\tprivate String descripcion;\r\n\r\n\t@Column(name = \"fecha_inicio\")\r\n\tprivate LocalDate fechaInicio;\r\n\r\n\t@Column(name = \"fecha_fin\")\r\n\tprivate LocalDate fechaFin;\r\n\r\n\t@Column(name = \"ubicacion\", length = Integer.MAX_VALUE)\r\n\tprivate String ubicacion;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_categoria\", nullable = false)\r\n\tprivate Categorias idCategoria;\r\n\r\n}",
                "Obras.java": "package com.usta.gallery.entities;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"obras\")\r\npublic class Obras {\r\n\t@Id\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_obra\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@Column(name = \"titulo\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String titulo;\r\n\r\n\t@Column(name = \"descripcion\", length = Integer.MAX_VALUE)\r\n\tprivate String descripcion;\r\n\r\n\t@Column(name = \"año_creacion\")\r\n\tprivate LocalDate añoCreacion;\r\n\r\n\t@Column(name = \"imagen\", length = Integer.MAX_VALUE)\r\n\tprivate String imagen;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_usuario\", nullable = false)\r\n\tprivate com.usta.gallery.entities.Usuarios idUsuario;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_rol\", nullable = false)\r\n\tprivate com.usta.gallery.entities.Roles idRol;\r\n\r\n}",
                "ObrasExposiciones.java": "package com.usta.gallery.entities;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"obras_exposiciones\")\r\npublic class ObrasExposiciones {\r\n\t@Id\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_obra_exposicion\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_obra\", nullable = false)\r\n\tprivate Obras idObra;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_exposicion\", nullable = false)\r\n\tprivate Exposiciones idExposicion;\r\n\r\n}",
                "Roles.java": "package com.usta.gallery.entities;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"roles\")\r\npublic class Roles {\r\n\t@Id\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_rol\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@Column(name = \"rol\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String rol;\r\n\r\n}",
                "Tecnicas.java": "package com.usta.gallery.entities;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"tecnicas\")\r\npublic class Tecnicas {\r\n\t@Id\t\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_tecnica\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@Column(name = \"tecnica\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String tecnica;\r\n\r\n}",
                "Usuarios.java": "package com.usta.gallery.entities;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.FetchType;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.ManyToOne;\r\nimport jakarta.persistence.Table;\r\nimport lombok.Data;\r\n\r\n@Data\r\n@Entity\r\n@Table(name = \"usuarios\")\r\npublic class Usuarios {\r\n\t@Id\r\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\r\n\t@Column(name = \"id_usuario\", nullable = false)\r\n\tprivate Long id;\r\n\r\n\t@Column(name = \"nombre\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String nombre;\r\n\r\n\t@Column(name = \"apellido\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String apellido;\r\n\r\n\t@Column(name = \"correo\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String correo;\r\n\r\n\t@Column(name = \"contrasena\", nullable = false, length = Integer.MAX_VALUE)\r\n\tprivate String contrasena;\r\n\r\n\t@Column(name = \"fecha_nacimiento\")\r\n\tprivate LocalDate fechaNacimiento;\r\n\r\n\t@Column(name = \"pais_origen\", length = Integer.MAX_VALUE)\r\n\tprivate String paisOrigen;\r\n\r\n\t@ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n\t@JoinColumn(name = \"id_rol\", nullable = false)\r\n\tprivate Roles idRol;\r\n\r\n}"
              },
              "GalleryApplication.java": "package com.usta.gallery;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class GalleryApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(GalleryApplication.class, args);\n\t}\n\n}\n",
              "repository": {
                "CategoriaRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Categorias;\r\n\r\npublic interface CategoriaRepository extends JpaRepository<Categorias, Long> {\r\n  \r\n}",
                "ExposicionRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Exposiciones;\r\n\r\npublic interface ExposicionRepository extends JpaRepository<Exposiciones, Long> {\r\n  \r\n}\r\n",
                "ObraExposicionRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.ObrasExposiciones;\r\n\r\npublic interface ObraExposicionRepository extends JpaRepository<ObrasExposiciones, Long> {\r\n  \r\n}\r\n",
                "ObraRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Obras;\r\n\r\npublic interface ObraRepository extends JpaRepository<Obras, Long> {\r\n  \r\n}\r\n",
                "RolRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Roles;\r\n\r\npublic interface RolRepository extends JpaRepository<Roles, Long> {\r\n  \r\n}\r\n",
                "TecnicaRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Tecnicas;\r\n\r\npublic interface TecnicaRepository extends JpaRepository<Tecnicas, Long> {\r\n  \r\n}\r\n",
                "UsuarioRepository.java": "package com.usta.gallery.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport com.usta.gallery.entities.Usuarios;\r\n\r\npublic interface UsuarioRepository extends JpaRepository<Usuarios, Long> {\r\n  \r\n}\r\n"
              }
            }
          }
        }
      },
      "resources": {
        "application.properties": "spring.application.name=gallery\nspring.datasource.url=jdbc:postgresql://aws-0-us-west-1.pooler.supabase.com:6543/postgres?useSSl=true\nspring.datasource.username=postgres.eounncszqacgazuiqiob\nspring.datasource.password=Y2YVHglFGrLQ85Iy\nspring.datasource.driver-class-name=org.postgresql.Driver\nspring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect\nspring.jpa.show-sql=true\nspring.jpa.hibernate.ddl-auto=update"
      }
    },
    "test": {
      "java": {
        "com": {
          "usta": {
            "gallery": {
              "GalleryApplicationTests.java": "package com.usta.gallery;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass GalleryApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"
            }
          }
        }
      }
    }
  }
}